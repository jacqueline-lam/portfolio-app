{"ast":null,"code":"import _classCallCheck from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';var FilterButton=/*#__PURE__*/function(_Component){_inherits(FilterButton,_Component);var _super=_createSuper(FilterButton);function FilterButton(){var _this;_classCallCheck(this,FilterButton);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={selected:false};_this.getButtonClassnames=function(){var selected=_this.state.selected;var renderClasses=\"btn btn-outline-info btn-sm\";if(selected){renderClasses=\"btn btn-outline-info btn-sm active\";}return renderClasses;};_this.handleOnClick=function(event){var pressed=_this.state.selected;var stackClicked=event.target.id;if(!pressed){// dispatch will be called with the action type 'ADD_FILTER'\n// execute action creator by redferencing it as a prop\n_this.props.addFilter(stackClicked);_this.setState({selected:true});}else{_this.props.removeFilter(stackClicked);_this.setState({selected:false});}};return _this;}_createClass(FilterButton,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,selectedStackIds=_this$props.selectedStackIds,stack=_this$props.stack;var myStackId=stack.id;this.setState({selected:selectedStackIds.includes(myStackId.toString())});}},{key:\"render\",value:function render(){var stack=this.props.stack;var renderClasses=this.getButtonClassnames();return/*#__PURE__*/React.createElement(\"button\",{id:stack.id,type:\"button\",className:renderClasses,\"aria-pressed\":this.state.selected,value:stack,onClick:this.handleOnClick},stack.name);}}]);return FilterButton;}(Component);export default FilterButton;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/components/projects/FilterButton.js"],"names":["React","Component","FilterButton","state","selected","getButtonClassnames","renderClasses","handleOnClick","event","pressed","stackClicked","target","id","props","addFilter","setState","removeFilter","selectedStackIds","stack","myStackId","includes","toString","name"],"mappings":"4dAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAEMC,CAAAA,Y,mVACJC,K,CAAQ,CACNC,QAAQ,CAAE,KADJ,C,OAaRC,mB,CAAsB,UAAM,IAClBD,CAAAA,QADkB,CACL,MAAKD,KADA,CAClBC,QADkB,CAE1B,GAAIE,CAAAA,aAAa,CAAG,6BAApB,CACA,GAAIF,QAAJ,CAAc,CACZE,aAAa,CAAG,oCAAhB,CACD,CAED,MAAOA,CAAAA,aAAP,CACD,C,OAEDC,a,CAAgB,SAAAC,KAAK,CAAI,CACvB,GAAIC,CAAAA,OAAO,CAAG,MAAKN,KAAL,CAAWC,QAAzB,CACA,GAAMM,CAAAA,YAAY,CAAGF,KAAK,CAACG,MAAN,CAAaC,EAAlC,CAEA,GAAI,CAACH,OAAL,CAAc,CACZ;AACA;AACA,MAAKI,KAAL,CAAWC,SAAX,CAAqBJ,YAArB,EACA,MAAKK,QAAL,CAAc,CACZX,QAAQ,CAAE,IADE,CAAd,EAGD,CAPD,IAOO,CACL,MAAKS,KAAL,CAAWG,YAAX,CAAwBN,YAAxB,EACA,MAAKK,QAAL,CAAc,CACZX,QAAQ,CAAE,KADE,CAAd,EAGD,CACF,C,qGApCmB,iBACkB,KAAKS,KADvB,CACVI,gBADU,aACVA,gBADU,CACQC,KADR,aACQA,KADR,CAElB,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACN,EAAxB,CAEA,KAAKG,QAAL,CAAc,CACZX,QAAQ,CAAEa,gBAAgB,CAACG,QAAjB,CAA0BD,SAAS,CAACE,QAAV,EAA1B,CADE,CAAd,EAGD,C,uCA+BQ,IACCH,CAAAA,KADD,CACW,KAAKL,KADhB,CACCK,KADD,CAEP,GAAMZ,CAAAA,aAAa,CAAG,KAAKD,mBAAL,EAAtB,CAEA,mBACE,8BACE,EAAE,CAAEa,KAAK,CAACN,EADZ,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAEN,aAHb,CAIE,eAAc,KAAKH,KAAL,CAAWC,QAJ3B,CAKE,KAAK,CAAEc,KALT,CAME,OAAO,CAAE,KAAKX,aANhB,EAOGW,KAAK,CAACI,IAPT,CADF,CAWD,C,0BA1DwBrB,S,EA6D3B,cAAeC,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass FilterButton extends Component {\n  state = {\n    selected: false\n  }\n\n  componentDidMount() {\n    const { selectedStackIds, stack } = this.props;\n    const myStackId = stack.id;\n\n    this.setState({\n      selected: selectedStackIds.includes(myStackId.toString())\n    });\n  }\n\n  getButtonClassnames = () => {\n    const { selected } = this.state;\n    let renderClasses = \"btn btn-outline-info btn-sm\";\n    if (selected) {\n      renderClasses = \"btn btn-outline-info btn-sm active\"\n    }\n\n    return renderClasses;\n  }\n\n  handleOnClick = event => {\n    let pressed = this.state.selected\n    const stackClicked = event.target.id\n\n    if (!pressed) {\n      // dispatch will be called with the action type 'ADD_FILTER'\n      // execute action creator by redferencing it as a prop\n      this.props.addFilter(stackClicked)\n      this.setState({\n        selected: true\n      });\n    } else {\n      this.props.removeFilter(stackClicked)\n      this.setState({\n        selected: false\n      })\n    }\n  }\n\n  render() {\n    const { stack } = this.props\n    const renderClasses = this.getButtonClassnames();\n\n    return (\n      <button\n        id={stack.id}\n        type=\"button\"\n        className={renderClasses}\n        aria-pressed={this.state.selected}\n        value={stack}\n        onClick={this.handleOnClick}>\n        {stack.name}\n      </button >\n    );\n  }\n}\n\nexport default FilterButton;\n"]},"metadata":{},"sourceType":"module"}