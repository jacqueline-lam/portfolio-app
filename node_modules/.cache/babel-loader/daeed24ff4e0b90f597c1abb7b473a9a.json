{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';// Any component wrapped in Provider will have access to redux store\nimport{Provider}from'react-redux';// React-router to link to specific URLs then show/hide various components\nimport{BrowserRouter as Router}from'react-router-dom';// Compose combine diff middlewares into 1 - to pass in all middleware as 1 argument in createStore\nimport{createStore,applyMiddleware,compose}from'redux';// Thunk to incorporate async code with out Redux actions\nimport thunk from'redux-thunk';import rootReducer from\"./reducers/rootReducer\";import App from'./App';// Enable Redux DevTools Extension to view store state + each action dispatched\nvar composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;// Pass reducer into createStore, assigning return value to store\n// configure thunk by passing in thunk as part of the composeEnhancer\n// REDUCER = responsible for taking in action & deciding what to update about current store\n// and return new version of store\n// ACTIONS will be dispatched to our reducer\nvar store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));ReactDOM.render(/*#__PURE__*/ // Any component in App can now set up routes and links - Router as base for app's routing\n// pass store into Provider as a prop - allow access when we connect our components\nReact.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(App,null))),document.getElementById('root'));","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/index.js"],"names":["React","ReactDOM","Provider","BrowserRouter","Router","createStore","applyMiddleware","compose","thunk","rootReducer","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CAEA;AACA,OAASC,QAAT,KAAyB,aAAzB,CACA;AACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,KAAwC,kBAAxC,CACA;AACA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CAEA;AACA,GAAMC,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CN,OAAxE,CAEA;AACA;AACA;AACA;AACA;AACA,GAAMO,CAAAA,KAAK,CAAGT,WAAW,CACvBI,WADuB,CAEvBE,gBAAgB,CAACL,eAAe,CAACE,KAAD,CAAhB,CAFO,CAAzB,CAKAP,QAAQ,CAACc,MAAT,eACE;AACA;AACA,oBAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,eACE,oBAAC,MAAD,mBACE,oBAAC,GAAD,MADF,CADF,CAHF,CAQEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Any component wrapped in Provider will have access to redux store\nimport { Provider } from 'react-redux';\n// React-router to link to specific URLs then show/hide various components\nimport { BrowserRouter as Router } from 'react-router-dom';\n// Compose combine diff middlewares into 1 - to pass in all middleware as 1 argument in createStore\nimport { createStore, applyMiddleware, compose } from 'redux';\n// Thunk to incorporate async code with out Redux actions\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers/rootReducer\";\nimport App from './App';\n\n// Enable Redux DevTools Extension to view store state + each action dispatched\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Pass reducer into createStore, assigning return value to store\n// configure thunk by passing in thunk as part of the composeEnhancer\n// REDUCER = responsible for taking in action & deciding what to update about current store\n// and return new version of store\n// ACTIONS will be dispatched to our reducer\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  // Any component in App can now set up routes and links - Router as base for app's routing\n  // pass store into Provider as a prop - allow access when we connect our components\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}