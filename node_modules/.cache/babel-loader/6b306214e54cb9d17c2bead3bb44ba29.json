{"ast":null,"code":"// Action Creator creates an action object\n// action obj will be dispatched to reducer ->\n// then return new ver. of our state based on sent action\nexport var fetchProjects=function fetchProjects(){// Thunk allows us to return fn + fn receives store's dispatch as its arg\nreturn function(dispatch){// action dispatched before sending a remote request to API\ndispatch({type:'LOADING_PROJECTS'});fetch('https://jlam-portfolio-backend.herokuapp.com/api/v1/projects')// we won't do anything with this data until we get resp back\n// fetch returns Promise - data becomes available when promise resolves\n// .then() method to run once our Promise has been fulfilled - parse response data into JSON\n.then(function(resp){return resp.json();})// execute asynchronous code, once resolved, we can use dispatch to update our store\n// action dispatched along with a payload of the projects JSON collection\n.then(function(respJSON){return dispatch({type:'ADD_PROJECTS',projects:respJSON});});};};","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/actions/fetchProjects.js"],"names":["fetchProjects","dispatch","type","fetch","then","resp","json","respJSON","projects"],"mappings":"AAAA;AACA;AACA;AAEA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC;AACA,MAAO,UAACC,QAAD,CAAc,CACnB;AACAA,QAAQ,CAAC,CAAEC,IAAI,CAAE,kBAAR,CAAD,CAAR,CACAC,KAAK,CAAC,8DAAD,CACH;AACA;AACA;AAHF,CAIGC,IAJH,CAIQ,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EAJZ,CAKE;AACA;AANF,CAOGF,IAPH,CAOQ,SAAAG,QAAQ,QAAIN,CAAAA,QAAQ,CAAC,CAAEC,IAAI,CAAE,cAAR,CAAwBM,QAAQ,CAAED,QAAlC,CAAD,CAAZ,EAPhB,EAQD,CAXD,CAYD,CAdM","sourcesContent":["// Action Creator creates an action object\n// action obj will be dispatched to reducer ->\n// then return new ver. of our state based on sent action\n\nexport const fetchProjects = () => {\n  // Thunk allows us to return fn + fn receives store's dispatch as its arg\n  return (dispatch) => {\n    // action dispatched before sending a remote request to API\n    dispatch({ type: 'LOADING_PROJECTS' });\n    fetch('https://jlam-portfolio-backend.herokuapp.com/api/v1/projects')\n      // we won't do anything with this data until we get resp back\n      // fetch returns Promise - data becomes available when promise resolves\n      // .then() method to run once our Promise has been fulfilled - parse response data into JSON\n      .then(resp => resp.json())\n      // execute asynchronous code, once resolved, we can use dispatch to update our store\n      // action dispatched along with a payload of the projects JSON collection\n      .then(respJSON => dispatch({ type: 'ADD_PROJECTS', projects: respJSON }));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}