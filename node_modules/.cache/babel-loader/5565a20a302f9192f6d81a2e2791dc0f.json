{"ast":null,"code":"import _objectSpread from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Form from'react-bootstrap/Form';import Card from'react-bootstrap/Card';import Col from'react-bootstrap/Col';import Button from'react-bootstrap/Button';var CommentInput=/*#__PURE__*/function(_Component){_inherits(CommentInput,_Component);var _super=_createSuper(CommentInput);function CommentInput(){var _this;_classCallCheck(this,CommentInput);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={author:'',email:'',content:''};_this.handleOnChange=function(event){// Abstracting `setState` - name attrs matching keys in state\n// new state values used to set value attrs of inputs\n// component re-renders the input w/ new updated value\n_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleOnSubmit=function(event){// Prevent submit event to redirect browser to new URL\nevent.preventDefault();// Sets property of projectId on comment input from parent components id\nvar comment=_objectSpread({},_this.state,{project_id:_this.props.projectId});// Send State to our addComment action creator\n_this.props.addComment(comment);// Update component state to return to default state\n_this.setState({author:'',email:'',content:''});};return _this;}_createClass(CommentInput,[{key:\"render\",value:function render(){return/*#__PURE__*/ // Controlled form - form dervives its input values from state\n// explicitly set value of component using state + update value in resp to changes\nReact.createElement(\"div\",{className:\"comment-form\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Form,{role:\"form\",className:\"clearfix\",onSubmit:this.handleOnSubmit},/*#__PURE__*/React.createElement(\"h5\",null,\"Leave a comment\"),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formAuthor\"},/*#__PURE__*/React.createElement(Form.Control,{name:\"author\",type:\"text\",placeholder:\"Your name\",value:this.state.author,required:true,onChange:this.handleOnChange}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formEmail\"},/*#__PURE__*/React.createElement(Form.Control,{name:\"email\",type:\"email\",placeholder:\"Your email\",value:this.state.email,required:true,onChange:this.handleOnChange}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"We'll never share your email with anyone else.\")))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formContent\"},/*#__PURE__*/React.createElement(Form.Control,{name:\"content\",as:\"textarea\",rows:\"3\",placeholder:\"Enter your comment here...\",value:this.state.content,required:true,onChange:this.handleOnChange})),/*#__PURE__*/React.createElement(Button,{className:\"float-right\",type:\"submit\"},\"Post\"))));}}]);return CommentInput;}(Component);;export default CommentInput;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/components/comments/CommentInput.js"],"names":["React","Component","Form","Card","Col","Button","CommentInput","state","author","email","content","handleOnChange","event","setState","target","name","value","handleOnSubmit","preventDefault","comment","project_id","props","projectId","addComment"],"mappings":"mtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,GAEMC,CAAAA,Y,mVACJC,K,CAAQ,CACNC,MAAM,CAAE,EADF,CAENC,KAAK,CAAE,EAFD,CAGNC,OAAO,CAAE,EAHH,C,OAORC,c,CAAiB,SAAAC,KAAK,CAAI,CACxB;AACA;AACA;AACA,MAAKC,QAAL,oBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,CACuBH,KAAK,CAACE,MAAN,CAAaE,KADpC,GAGD,C,OAEDC,c,CAAiB,SAAAL,KAAK,CAAI,CACxB;AACAA,KAAK,CAACM,cAAN,GACA;AACA,GAAMC,CAAAA,OAAO,kBACR,MAAKZ,KADG,EAEXa,UAAU,CAAE,MAAKC,KAAL,CAAWC,SAFZ,EAAb,CAIA;AACA,MAAKD,KAAL,CAAWE,UAAX,CAAsBJ,OAAtB,EACA;AACA,MAAKN,QAAL,CAAc,CACZL,MAAM,CAAE,EADI,CAEZC,KAAK,CAAE,EAFK,CAGZC,OAAO,CAAE,EAHG,CAAd,EAKD,C,+EAEQ,CACP,oBACE;AACA;AACA,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,SAAS,CAAC,UAA5B,CAAuC,QAAQ,CAAE,KAAKO,cAAtD,eACE,gDADF,cAEE,oBAAC,IAAD,CAAM,GAAN,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,YAAtB,eACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,WAHd,CAIE,KAAK,CAAE,KAAKV,KAAL,CAAWC,MAJpB,CAKE,QAAQ,KALV,CAME,QAAQ,CAAE,KAAKG,cANjB,EADF,CADF,CADF,cAaE,oBAAC,GAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,WAAtB,eACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,YAHd,CAIE,KAAK,CAAE,KAAKJ,KAAL,CAAWE,KAJpB,CAKE,QAAQ,KALV,CAME,QAAQ,CAAE,KAAKE,cANjB,EADF,cASE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,YAArB,mDATF,CADF,CAbF,CAFF,cA+BE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,aAAtB,eACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,SADP,CAEE,EAAE,CAAC,UAFL,CAGE,IAAI,CAAC,GAHP,CAIE,WAAW,CAAC,4BAJd,CAKE,KAAK,CAAE,KAAKJ,KAAL,CAAWG,OALpB,CAME,QAAQ,KANV,CAOE,QAAQ,CAAE,KAAKC,cAPjB,EADF,CA/BF,cA0CE,oBAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,IAAI,CAAC,QAArC,SA1CF,CADF,CADF,CAHF,CAuDD,C,0BA3FwBV,S,EA4F1B,CAED,cAAeK,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass CommentInput extends Component {\n  state = {\n    author: '',\n    email: '',\n    content: '',\n  }\n\n  // Fired everytime form changes\n  handleOnChange = event => {\n    // Abstracting `setState` - name attrs matching keys in state\n    // new state values used to set value attrs of inputs\n    // component re-renders the input w/ new updated value\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleOnSubmit = event => {\n    // Prevent submit event to redirect browser to new URL\n    event.preventDefault()\n    // Sets property of projectId on comment input from parent components id\n    const comment = {\n      ...this.state,\n      project_id: this.props.projectId,\n    }\n    // Send State to our addComment action creator\n    this.props.addComment(comment);\n    // Update component state to return to default state\n    this.setState({\n      author: '',\n      email: '',\n      content: '',\n    });\n  }\n\n  render() {\n    return (\n      // Controlled form - form dervives its input values from state\n      // explicitly set value of component using state + update value in resp to changes\n      <div className='comment-form'>\n        <Card>\n          <Form role=\"form\" className='clearfix' onSubmit={this.handleOnSubmit}>\n            <h5>Leave a comment</h5>\n            <Form.Row>\n              <Col>\n                <Form.Group controlId=\"formAuthor\">\n                  <Form.Control\n                    name=\"author\"\n                    type=\"text\"\n                    placeholder=\"Your name\"\n                    value={this.state.author}\n                    required\n                    onChange={this.handleOnChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Control\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                    value={this.state.email}\n                    required\n                    onChange={this.handleOnChange}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Group controlId=\"formContent\">\n              <Form.Control\n                name=\"content\"\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Enter your comment here...\"\n                value={this.state.content}\n                required\n                onChange={this.handleOnChange}\n              />\n            </Form.Group>\n            <Button className=\"float-right\" type=\"submit\">\n              Post\n            </Button>\n          </Form>\n        </Card>\n\n      </div>\n    );\n  }\n};\n\nexport default CommentInput;\n"]},"metadata":{},"sourceType":"module"}