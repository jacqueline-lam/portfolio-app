{"ast":null,"code":"import _toConsumableArray from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// when action is dispatched to reducer,\n// reducer is passed current state and dispatched action\n// Everytime we update sth in our store, this reducer will return updated state\nvar projectsReducer=function projectsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{allProjects:[],stacks:[],selectedStackIds:[],filteredProjects:[],loading:false};var action=arguments.length>1?arguments[1]:undefined;var stackIds;var filteredProjects=[];switch(action.type){case'LOADING_STACKS':return _objectSpread({},state,{stacks:_toConsumableArray(state.stacks),loading:true});case'ADD_STACKS':return _objectSpread({},state,{stacks:action.stacks,loading:false});case'LOADING_PROJECTS':return _objectSpread({},state,{allProjects:_toConsumableArray(state.allProjects),loading:true});case'ADD_PROJECTS':return _objectSpread({},state,{allProjects:action.projects,filteredProjects:action.projects,loading:false});case'ADD_FILTER':// Filter projects with the chosen stack\nfilteredProjects=state.filteredProjects.filter(function(proj){return proj.stacks.some(function(stack){return stack.id.toString()===action.stackId;});});// Concatnenating new values when stack filterbutton is pressed\nstackIds=state.selectedStackIds.concat(action.stackId);// Set store unique stackIds\nstackIds=_toConsumableArray(new Set(stackIds));console.log('action.stackId = ',typeof action.stackId,action.stackId);console.log('stackIds = ',typeof stackIds,stackIds);console.log('filteredProjects = ',typeof filteredProjects,filteredProjects);return _objectSpread({},state,{selectedStackIds:stackIds,filteredProjects:filteredProjects});case'REMOVE_FILTER':// Copy selectedStackIds array to allow removal w/o mutation\nstackIds=_toConsumableArray(state.selectedStackIds);stackIds.splice(stackIds.indexOf(action.stackId),1);filteredProjects=state.allProjects;// Only include projects that have all the selected stacks\nif(stackIds.length>0){filteredProjects=state.allProjects.filter(function(proj){var projectStacks=proj.stacks.map(function(proj){return proj['id'].toString();});var includesSelectedStacks=stackIds.every(function(selectedStack){return projectStacks.includes(selectedStack);});return includesSelectedStacks;});}console.log('action.stackId',typeof action.stackId,action.stackId);console.log('stackIds',typeof stackIds,stackIds);console.log('filteredProjects',typeof filteredProjects,filteredProjects);return _objectSpread({},state,{filteredProjects:filteredProjects,selectedStackIds:stackIds});case'ADD_COMMENT':var index=state.filteredProjects.findIndex(function(project){return project.id===action.comment.project_id;});var project=state.filteredProjects[index];return _objectSpread({},state,{filteredProjects:[].concat(_toConsumableArray(state.filteredProjects.slice(0,index)),[_objectSpread({},project,{comments:project.comments.concat(action.comment)})],_toConsumableArray(state.filteredProjects.slice(index+1)))});default:return state;}};export default projectsReducer;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/reducers/projectsReducer.js"],"names":["projectsReducer","state","allProjects","stacks","selectedStackIds","filteredProjects","loading","action","stackIds","type","projects","filter","proj","some","stack","id","toString","stackId","concat","Set","console","log","splice","indexOf","length","projectStacks","map","includesSelectedStacks","every","selectedStack","includes","index","findIndex","project","comment","project_id","slice","comments"],"mappings":"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","sourcesContent":["// when action is dispatched to reducer,\n// reducer is passed current state and dispatched action\n// Everytime we update sth in our store, this reducer will return updated state\nconst projectsReducer = (state = {\n  allProjects: [],\n  stacks: [],\n  selectedStackIds: [],\n  filteredProjects: [],\n  loading: false,\n}, action) => {\n  let stackIds;\n  let filteredProjects = []\n\n  switch (action.type) {\n    case 'LOADING_STACKS':\n      return {\n        ...state,\n        stacks: [...state.stacks],\n        loading: true\n      }\n\n    case 'ADD_STACKS':\n      return {\n        ...state,\n        stacks: action.stacks,\n        loading: false\n      }\n\n    case 'LOADING_PROJECTS':\n      return {\n        ...state,\n        allProjects: [...state.allProjects],\n        loading: true\n      }\n\n    case 'ADD_PROJECTS':\n      return {\n        ...state,\n        allProjects: action.projects,\n        filteredProjects: action.projects,\n        loading: false\n      }\n\n    case 'ADD_FILTER':\n      // Filter projects with the chosen stack\n      filteredProjects = state.filteredProjects.filter(proj => {\n        return proj.stacks.some(stack => stack.id.toString() === action.stackId)\n      })\n\n      // Concatnenating new values when stack filterbutton is pressed\n      stackIds = state.selectedStackIds.concat(action.stackId)\n      // Set store unique stackIds\n      stackIds = [...new Set(stackIds)]\n\n      console.log('action.stackId = ', typeof action.stackId, action.stackId)\n      console.log('stackIds = ', typeof stackIds, stackIds)\n      console.log('filteredProjects = ', typeof filteredProjects, filteredProjects)\n\n      return {\n        ...state,\n        selectedStackIds: stackIds,\n        filteredProjects: filteredProjects,\n      }\n\n    case 'REMOVE_FILTER':\n      // Copy selectedStackIds array to allow removal w/o mutation\n      stackIds = [...state.selectedStackIds]\n      stackIds.splice(stackIds.indexOf(action.stackId), 1)\n\n      filteredProjects = state.allProjects\n      // Only include projects that have all the selected stacks\n      if (stackIds.length > 0) {\n        filteredProjects = state.allProjects.filter(proj => {\n          const projectStacks = proj.stacks.map(proj => proj['id'].toString())\n          const includesSelectedStacks = stackIds.every(selectedStack =>\n            projectStacks.includes(selectedStack)\n          )\n          return includesSelectedStacks\n        })\n      }\n      console.log('action.stackId', typeof action.stackId, action.stackId)\n      console.log('stackIds', typeof stackIds, stackIds)\n      console.log('filteredProjects', typeof filteredProjects, filteredProjects)\n\n      return {\n        ...state,\n        filteredProjects: filteredProjects,\n        selectedStackIds: stackIds,\n      }\n\n    case 'ADD_COMMENT':\n      let index = state.filteredProjects.findIndex(project => project.id === action.comment.project_id);\n      let project = state.filteredProjects[index];\n\n      return {\n        ...state,\n        filteredProjects: [\n          ...state.filteredProjects.slice(0, index),\n          { ...project, comments: project.comments.concat(action.comment) },\n          ...state.filteredProjects.slice(index + 1)\n        ]\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default projectsReducer;\n"]},"metadata":{},"sourceType":"module"}