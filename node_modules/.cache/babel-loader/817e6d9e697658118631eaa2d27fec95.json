{"ast":null,"code":"import _classCallCheck from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jackie.lam/Projects/portfolio-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Route}from'react-router-dom';import ProjectFilters from'../components/projects/ProjectFilters';import ProjectList from'../components/projects/ProjectList';import ProjectDetails from'../components/projects/ProjectDetails';import{fetchStacks as _fetchStacks}from\"../actions/fetchStacks\";import{fetchProjects as _fetchProjects}from\"../actions/fetchProjects\";import{addFilter as _addFilter,removeFilter as _removeFilter}from'../actions/filterProjects';import Loading from'../images/loading.gif';var ProjectsContainer=/*#__PURE__*/function(_Component){_inherits(ProjectsContainer,_Component);var _super=_createSuper(ProjectsContainer);function ProjectsContainer(){_classCallCheck(this,ProjectsContainer);return _super.apply(this,arguments);}_createClass(ProjectsContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchStacks();this.props.fetchProjects();}},{key:\"render\",value:function render(){var _this$props=this.props,filteredProjects=_this$props.filteredProjects,stacks=_this$props.stacks,selectedStackIds=_this$props.selectedStackIds,loading=_this$props.loading,addFilter=_this$props.addFilter,removeFilter=_this$props.removeFilter;return/*#__PURE__*/React.createElement(\"div\",{id:\"projects-container\",className:\"component\"},loading?/*#__PURE__*/React.createElement(\"img\",{src:Loading,alt:\"loading\"}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Route,{path:\"/portfolio-app/projects/:projectId\",render:function render(routerProps){return/*#__PURE__*/React.createElement(ProjectDetails,Object.assign({},routerProps,{projects:filteredProjects}));}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/portfolio-app/projects\",render:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"portfolio\"},/*#__PURE__*/React.createElement(\"h1\",null,\"PORTFOLIO\"),/*#__PURE__*/React.createElement(\"h3\",null,\"My Latest Projects\"),/*#__PURE__*/React.createElement(ProjectFilters,{stacks:stacks,selectedStackIds:selectedStackIds,addFilter:addFilter,removeFilter:removeFilter}),/*#__PURE__*/React.createElement(ProjectList,{filteredProjects:filteredProjects}));}})));}}]);return ProjectsContainer;}(Component);// passing in the state from the Redux store\n// so we can access values in our stores as props\nvar mapStateToProps=function mapStateToProps(state){return{stacks:state.projects.stacks,selectedStackIds:state.projects.selectedStackIds,filteredProjects:state.projects.filteredProjects,loading:state.projects.loading};};// gives us ability to dispatch new actions to our store directly from this component\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{// wrap actions in a dispatch & anonymous fn to pass them as callback props\n// when called, dispstch fn will invoke reducer and result in new updated state\nfetchStacks:function fetchStacks(){return dispatch(_fetchStacks());},fetchProjects:function fetchProjects(){return dispatch(_fetchProjects());},addFilter:function addFilter(stackId){return dispatch(_addFilter(stackId));},removeFilter:function removeFilter(stackId){return dispatch(_removeFilter(stackId));}};};// connect redux store to this component\nexport default connect(mapStateToProps,mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio-app/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","Route","ProjectFilters","ProjectList","ProjectDetails","fetchStacks","fetchProjects","addFilter","removeFilter","Loading","ProjectsContainer","props","filteredProjects","stacks","selectedStackIds","loading","routerProps","mapStateToProps","state","projects","mapDispatchToProps","dispatch","stackId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport ProjectDetails from '../components/projects/ProjectDetails'\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects';\nimport Loading from '../images/loading.gif'\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    const { filteredProjects, stacks, selectedStackIds, loading, addFilter, removeFilter } = this.props\n    return (\n      <div id='projects-container' className='component'>\n        {\n          loading ?\n            <img src={Loading} alt='loading' />\n            :\n            < >\n              {/* define parameter name in route path - show up in match.params */}\n              {/* replace `component` prop w/ `render` prop so we can pass route info to `ProjectDetails` component*/}\n              <Route path='/portfolio-app/projects/:projectId' render={routerProps => <ProjectDetails {...routerProps} projects={filteredProjects} />} />\n              <Route exact path='/portfolio-app/projects' render={() =>\n                <div id='portfolio'>\n                  <h1>PORTFOLIO</h1>\n                  <h3>My Latest Projects</h3>\n                  <ProjectFilters stacks={stacks} selectedStackIds={selectedStackIds} addFilter={addFilter} removeFilter={removeFilter} />\n                  <ProjectList filteredProjects={filteredProjects} />\n                </div>\n              } />\n            </ >\n        }\n      </div >\n    )\n  }\n}\n\n// passing in the state from the Redux store\n// so we can access values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    stacks: state.projects.stacks,\n    selectedStackIds: state.projects.selectedStackIds,\n    filteredProjects: state.projects.filteredProjects,\n    loading: state.projects.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    // wrap actions in a dispatch & anonymous fn to pass them as callback props\n    // when called, dispstch fn will invoke reducer and result in new updated state\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}